// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
import { combineLatest, of } from '@polkadot/x-rxjs';
import { map, switchMap } from '@polkadot/x-rxjs/operators';
import { memo } from "../util/index.mjs";
/**
 * @name subscribeNewBlocks
 * @returns The latest block & events for that block
 */

export function subscribeNewBlocks(instanceId, api) {
  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {
    const blockHash = header.hash;
    return combineLatest(of(blockHash), api.query.system.events.at(blockHash), api.rpc.chain.getBlock(header.hash));
  }), map(([blockHash, events, block]) => ({
    block: block.block,
    blockHash,
    blockNumber: block.block.header.number.unwrap(),
    events,
    justification: block.justification
  }))));
}