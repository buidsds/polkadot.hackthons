// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
import { memo } from '@polkadot/api-derive/util';
import { combineLatest, of } from '@polkadot/x-rxjs';
import { map, switchMap } from '@polkadot/x-rxjs/operators';

function parseResult(api, [maybeBounties, maybeDescriptions, ids]) {
  const bounties = [];
  maybeBounties.forEach((bounty, index) => {
    if (bounty.isSome) {
      bounties.push({
        bounty: bounty.unwrap(),
        description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),
        index: ids[index]
      });
    }
  });
  return bounties;
}

export function bounties(instanceId, api) {
  const bountyBase = api.query.bounties ? api.query.bounties : api.query.treasury;
  return memo(instanceId, () => bountyBase.bountyCount().pipe(switchMap(() => bountyBase.bounties.keys()), switchMap(keys => {
    const ids = keys.map(({
      args: [id]
    }) => id);
    return combineLatest([bountyBase.bounties.multi(ids), bountyBase.bountyDescriptions.multi(ids), of(ids)]);
  }), map(([maybeBounties, maybeDescriptions, ids]) => parseResult(api, [maybeBounties, maybeDescriptions, ids]))));
}